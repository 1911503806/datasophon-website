{
  "filename": "quick-start - 副本.md",
  "__html": "<h2 id=\"1.1-%E9%83%A8%E7%BD%B2mysql%EF%BC%88%E7%95%A5%EF%BC%89\">1.1 部署mysql（略） <a class=\"header-anchor\" href=\"#1.1-%E9%83%A8%E7%BD%B2mysql%EF%BC%88%E7%95%A5%EF%BC%89\">#</a></h2>\n<p>注意需关闭mysql ssl功能。在部署过程中，部分组件会执行sql生成库表，不同环境的mysql在配置上存在差异，可根据sql执行情况，变更mysql配置。mysql建议版本为5.7.X。</p>\n<h2 id=\"1.2-%E9%83%A8%E7%BD%B2nginx\">1.2 部署nginx <a class=\"header-anchor\" href=\"#1.2-%E9%83%A8%E7%BD%B2nginx\">#</a></h2>\n<p>提供nginx.conf 的server配置。</p>\n<pre><code>         server {\n                listen 8888;# 访问端口(自行修改)\n                server_name localhost;\n                #charset koi8-r;\n                #access_log /var/log/nginx/host.access.log main;\n                location / {\n                        root /usr/local/nginx/dist; # 前端解压的 dist 目录地址(自行修改)\n                        index index.html index.html;\n                }\n                location /ddh {\n                        proxy_pass http://ddp1:8081; # 接口地址(自行修改)\n                        proxy_set_header Host $host;\n                        proxy_set_header X-Real-IP $remote_addr;\n                        proxy_set_header x_real_ipP $remote_addr;\n                        proxy_set_header remote_addr $remote_addr;\n                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                        proxy_http_version 1.1;\n                        proxy_connect_timeout 4s;\n                        proxy_read_timeout 30s;\n                        proxy_send_timeout 12s;\n                        proxy_set_header Upgrade $http_upgrade;\n                        proxy_set_header Connection &quot;upgrade&quot;;\n                }\n\n                #error_page 404 /404.html;\n                # redirect server error pages to the static page /50x.html\n                #\n                error_page 500 502 503 504 /50x.html;\n                location = /50x.html {\n                        root /usr/share/nginx/html;\n                }\n        }\n\n</code></pre>\n<h2 id=\"1.3-%E6%89%A7%E8%A1%8C%E6%95%B0%E6%8D%AE%E8%84%9A%E6%9C%AC\">1.3 执行数据脚本 <a class=\"header-anchor\" href=\"#1.3-%E6%89%A7%E8%A1%8C%E6%95%B0%E6%8D%AE%E8%84%9A%E6%9C%AC\">#</a></h2>\n<p>创建ddh数据库并赋权。</p>\n<pre><code>CREATE DATABASE IF NOT EXISTS ddh DEFAULT CHARACTER SET utf8;\ngrant all privileges on *.* to ddh@&quot;%&quot; identified by 'ddh' with grant option;\nGRANT ALL PRIVILEGES ON *.* TO 'ddh'@'%';\nFLUSH PRIVILEGES;\n</code></pre>\n<p>登录mysql，执行数据库脚本ddh.sql，执行成功后可以看到如下数据库及表。</p>\n<p><img src=\"../img/wps3.png\" alt=\"img\"></p>\n<h2 id=\"1.4-%E8%A7%A3%E5%8E%8Bddp.tar.gz\">1.4 解压DDP.tar.gz <a class=\"header-anchor\" href=\"#1.4-%E8%A7%A3%E5%8E%8Bddp.tar.gz\">#</a></h2>\n<p>在/opt/datasophon目录下解压DDP.tar.gz。</p>\n<h2 id=\"1.5-%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE\">1.5 修改配置 <a class=\"header-anchor\" href=\"#1.5-%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE\">#</a></h2>\n<h3 id=\"1.5.1-%E9%83%A8%E7%BD%B2%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D\">1.5.1 部署目录介绍 <a class=\"header-anchor\" href=\"#1.5.1-%E9%83%A8%E7%BD%B2%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D\">#</a></h3>\n<p>在安装目录下解压ddh.tar.gz，解压后可以看到如下安装目录：</p>\n<p>![img](file:///C:\\Users\\诸葛余\\AppData\\Local\\Temp\\ksohtml19564\\wps4.jpg)</p>\n<p>bin：启动脚本</p>\n<p>conf ：配置文件</p>\n<p>lib ：项目依赖的jar包</p>\n<p>logs:项目日志存放目录</p>\n<p>jmx：jmx插件</p>\n<h3 id=\"1.5.2-%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">1.5.2 修改配置文件 <a class=\"header-anchor\" href=\"#1.5.2-%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">#</a></h3>\n<p>修改 conf 目录下的application.yml 配置文件中数据库链接配置：</p>\n<pre><code># Tomcat\nserver:\n  port: 8081\n  servlet:\n    context-path: /ddh/\nsecurity:\n  authentication:\n    type: PASSWORD\n# mysql\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    url: jdbc:mysql://ddp1:3306/ddh?useUnicode=true&amp;characterEncoding=utf-8\n    username: root\n    password: datasophon\n    driver-class-name: com.mysql.jdbc.Driver\n#json格式化全局配置\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n  mvc:\n    date-format: yyyy-MM-dd HH:mm:ss\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath*:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.datasophon.ddh.dao.entity\n  typeEnumsPackage: com.datasophon.ddh.dao.enums\n  global-config:\n    #数据库相关配置\n    db-config:\n      #主键类型  AUTO:&quot;数据库ID自增&quot;, INPUT:&quot;用户输入ID&quot;, ID_WORKER:&quot;全局唯一ID (数字类型唯一ID)&quot;, UUID:&quot;全局唯一ID UUID&quot;;\n      id-type: AUTO\n      #字段策略 IGNORED:&quot;忽略判断&quot;,NOT_NULL:&quot;非 NULL 判断&quot;),NOT_EMPTY:&quot;非空判断&quot;\n      field-strategy: NOT_NULL\n      #驼峰下划线转换\n      column-underline: true\n      logic-delete-value: -1\n      logic-not-delete-value: 0\n    banner: false\n  #原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n    call-setters-on-nulls: true\n    jdbc-type-for-null: 'null'\n#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n</code></pre>\n<h2 id=\"1.6-%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1\">1.6 启动服务 <a class=\"header-anchor\" href=\"#1.6-%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1\">#</a></h2>\n<p>在ddh目录下使用脚本启动服务</p>\n<pre><code>启动：sh bin/ddh-api.sh start api\n停止：sh bin/ddh-api.sh stop api\n重启：sh bin/ddh-api.sh restart api\n</code></pre>\n<p>部署成功后，可以进行日志查看，日志统一存放于logs文件夹内:</p>\n<p>logs/</p>\n<p>├── ddh-api.log</p>\n<p>├── ddh-api-error.log</p>\n<p>|—— api-{hostname}.out</p>\n<h2 id=\"1.7-%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF\">1.7 部署前端 <a class=\"header-anchor\" href=\"#1.7-%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF\">#</a></h2>\n<p>将dist.zip解压到nginx目录下，启动nginx。</p>\n<p><img src=\"../img/wps8.png\" alt=\"img\"></p>\n<h2 id=\"1.8-%E8%AE%BF%E9%97%AE%E9%A1%B5%E9%9D%A2\">1.8 访问页面 <a class=\"header-anchor\" href=\"#1.8-%E8%AE%BF%E9%97%AE%E9%A1%B5%E9%9D%A2\">#</a></h2>\n<p>打开http://ddp1:8888访问页面</p>\n",
  "link": "\\zh-cn\\docs\\dir\\quick-start - 副本.html",
  "meta": {
    "title": "建议配置",
    "keywords": "服务器要求",
    "description": "some description"
  }
}